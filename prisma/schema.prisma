// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Entity {
    id                Int         @id @default(autoincrement())
    farcasterAccounts Farcaster[]
    ethereumAccounts  Ethereum[]
    links             Link[]
}

model Farcaster {
    fid      Int     @id
    fname    String?
    pfp      String?
    display  String?
    bio      String?
    source   String
    verified Boolean
    entityId Int

    entity Entity          @relation(fields: [entityId], references: [id])
    casts  FarcasterCast[]
}

model Ethereum {
    address     String  @id
    source      String
    verified    Boolean
    sourceInput String?
    entityId    Int

    entity Entity? @relation(fields: [entityId], references: [id])
}

model Link {
    url         String
    metadata    Json?
    source      String
    verified    Boolean
    sourceInput String?
    deleted     Boolean @default(false)
    entityId    Int

    entity Entity? @relation(fields: [entityId], references: [id])

    @@id([url, entityId, source])
}

model FarcasterCast {
    fid        Int
    hash       String
    timestamp  DateTime
    parent     String?
    parentFid  Int?
    parentType String?
    text       String
    deleted    Boolean  @default(false)

    user Farcaster @relation(fields: [fid], references: [fid])

    embeds   FarcasterCastEmbed[]
    mentions FarcasterCastMention[]

    @@id([fid, hash])
}

model FarcasterCastEmbed {
    fid         Int
    hash        String
    content     String
    contentFid  Int
    contentType String
    parsed      Boolean @default(false)
    deleted     Boolean @default(false)

    cast FarcasterCast @relation(fields: [hash, fid], references: [hash, fid])

    @@id([fid, hash, content])
}

model FarcasterCastMention {
    fid             Int
    hash            String
    mention         Int
    mentionPosition Int
    deleted         Boolean @default(false)

    cast FarcasterCast @relation(fields: [hash, fid], references: [hash, fid])

    @@id([fid, hash, mention])
}

model FarcasterCastReaction {
    fid          Int
    target       String
    targetFid    Int
    targetType   String
    reactionType String
    timestamp    DateTime
    deleted      Boolean  @default(false)

    @@id([fid, target, reactionType])
}

model Backfill {
    fid Int @id
}
